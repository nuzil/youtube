name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  repository_dispatch:
  workflow_dispatch:

env:
  CLIENTID: ${{ secrets.CLIENTID_STAGE }}
  CLIENTSECRET: ${{ secrets.CLIENTSECRET_STAGE }}
  TECHNICALACCOUNTID: ${{ secrets.TECHNICALACCID_STAGE }}
  TECHNICALACCOUNTEMAIL: ${{ secrets.TECHNICALACCEMAIL_STAGE }}
  IMSORGID: ${{ secrets.IMSORGID }}
  ORGID: ${{ secrets.ORGID }}
  PROJECTID: ${{ secrets.PROJECTID }}
  WORKSPACEID: ${{ secrets.WORKSPACEID_STAGE }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
   deploy:
    name: Update Mesh
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        node-version: ['20']
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup CLI
        uses: adobe/aio-cli-setup-action@1.3.0
        with:
          os: ${{ matrix.os }}
          version: 10.x.x
      - name: api-mesh-plugin install
        run: aio plugins:install @adobe/aio-cli-plugin-api-mesh
      - name: Auth
        uses: adobe/aio-apps-action@3.3.0
        with:
          os: ${{ matrix.os }}
          command: oauth_sts
          CLIENTID: ${{ secrets.CLIENTID_STAGE }}
          CLIENTSECRET: ${{ secrets.CLIENTSECRET_STAGE }}
          TECHNICALACCOUNTID: ${{ secrets.TECHNICALACCID_STAGE }}
          TECHNICALACCOUNTEMAIL: ${{ secrets.TECHNICALACCEMAIL_STAGE }}
          IMSORGID: ${{ secrets.IMSORGID }}
          SCOPES: AdobeID, openid, read_organizations, additional_info.projectedProductContext, additional_info.roles, adobeio_api, read_client_secret, manage_client_secrets
      - name: Select org
        run: aio console:org:select ${{ secrets.ORGID }}
      - name: Select project
        run: aio console:project:select ${{ secrets.PROJECTID }}
      - name: Select workspace
        run: aio console:workspace:select ${{ secrets.WORKSPACEID_STAGE }}
      - name: api-mesh update
        run: aio api-mesh:update -c mesh.json --env .env

